{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\Desktop\\\\COLLEGE STUFF\\\\SOPH\\\\fall\\\\cs307\\\\project\\\\Corec-Tracker\\\\corec-dashboard\\\\src\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, useHistory } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport Header from \"./Header\";\nimport Star from \"./Star\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard(props) {\n  _s();\n\n  const [rooms, setRooms] = useState([]);\n  const [user, setUser] = useState(\"\");\n  const [showFavOnly, setShowFavOnly] = useState(false);\n  useEffect(() => {\n    // setUser(props.location.state.user);\n    // fetch(`/getrooms?u=${props.location.state.user}`)\n    // .then(res => res.json())\n    // .then((response) => {\n    //   setRooms(response)\n    // });\n    setUser(props.location.state.user);\n    setRooms([{\n      name: \"Room 1\",\n      fav: false\n    }, {\n      name: \"Room 2\",\n      fav: true\n    }, {\n      name: \"Room 3\",\n      fav: true\n    }, {\n      name: \"Room 4\",\n      fav: false\n    }]);\n  }, []);\n\n  function changeRoomFav(name) {\n    for (var i in rooms) {\n      if (rooms[i].name == name) {\n        rooms[i].fav = !rooms[i].fav;\n      }\n    }\n  }\n\n  function renderRooms() {\n    let rowsToRender = [];\n    rooms.forEach(item => {\n      if (showFavOnly && !item.fav) {\n        return;\n      }\n\n      rowsToRender.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: \"/roompage\",\n            state: {\n              item\n            }\n          },\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Star, {\n          room: item.name,\n          selected: item.fav,\n          favChange: name => changeRoomFav(name)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, item.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this));\n    });\n    return rowsToRender;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", user, \"'s Dashboard \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      block: true,\n      size: \"lg\",\n      type: \"submit\",\n      onClick: () => setShowFavOnly(true),\n      disabled: showFavOnly,\n      children: \"Show favorites only\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      block: true,\n      size: \"lg\",\n      type: \"submit\",\n      onClick: () => setShowFavOnly(false),\n      disabled: !showFavOnly,\n      children: \"Show all\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), renderRooms()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"HphDzz/x7M+g3dpPg+n5TIqdFDo=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/danie/Desktop/COLLEGE STUFF/SOPH/fall/cs307/project/Corec-Tracker/corec-dashboard/src/Dashboard.js"],"names":["React","useEffect","useState","BrowserRouter","Router","Switch","Route","Link","useHistory","Button","Header","Star","Dashboard","props","rooms","setRooms","user","setUser","showFavOnly","setShowFavOnly","location","state","name","fav","changeRoomFav","i","renderRooms","rowsToRender","forEach","item","push","pathname"],"mappings":"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","sourcesContent":["import {React, useEffect, useState} from \"react\";\r\nimport {BrowserRouter as Router, Switch, Route, Link, useHistory} from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Header from \"./Header\";\r\nimport Star from \"./Star\";\r\n\r\nfunction Dashboard(props) {\r\n  const [rooms, setRooms] = useState([]);\r\n  const [user, setUser] = useState(\"\");\r\n  const [showFavOnly, setShowFavOnly] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // setUser(props.location.state.user);\r\n    // fetch(`/getrooms?u=${props.location.state.user}`)\r\n    // .then(res => res.json())\r\n    // .then((response) => {\r\n    //   setRooms(response)\r\n    // });\r\n    setUser(props.location.state.user);\r\n    setRooms(\r\n      [\r\n          {\r\n            name: \"Room 1\",\r\n            fav: false\r\n          },\r\n          {\r\n            name: \"Room 2\",\r\n            fav: true\r\n          },\r\n          {\r\n            name: \"Room 3\",\r\n            fav: true\r\n          },\r\n          {\r\n            name: \"Room 4\",\r\n            fav: false\r\n          }\r\n    ]);\r\n  }, [])\r\n\r\n  function changeRoomFav(name) {\r\n    for (var i in rooms) {\r\n      if (rooms[i].name == name) {\r\n        rooms[i].fav = !rooms[i].fav;\r\n      }\r\n    }\r\n  }\r\n\r\n  function renderRooms() {\r\n    let rowsToRender = []\r\n      rooms.forEach((item) => {\r\n        if (showFavOnly && !item.fav) {\r\n          return;\r\n        }\r\n        rowsToRender.push(\r\n          <div className=\"room-row\" key={item.name}>\r\n            <hr/>\r\n            <Link\r\n              to={{\r\n                pathname: \"/roompage\",\r\n                state: {item}\r\n              }}\r\n            >{item.name}</Link>\r\n            <Star room={item.name} selected={item.fav} favChange={(name) => changeRoomFav(name)}/>\r\n            <hr/>\r\n          </div>\r\n        )\r\n      })\r\n    return (\r\n      rowsToRender\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header/>\r\n      <h1> {user}'s Dashboard </h1>\r\n      <Button block size=\"lg\" type=\"submit\" onClick={() => setShowFavOnly(true)} disabled={showFavOnly}>\r\n        Show favorites only\r\n      </Button>\r\n      <Button block size=\"lg\" type=\"submit\" onClick={() => setShowFavOnly(false)} disabled={!showFavOnly}>\r\n        Show all\r\n      </Button>\r\n      {renderRooms()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}