{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\Desktop\\\\COLLEGE STUFF\\\\SOPH\\\\fall\\\\cs307\\\\project\\\\Corec-Tracker\\\\corec-dashboard\\\\src\\\\ForgotPassword.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, useHistory } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Overlay from \"react-overlays/esm/Overlay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ForgotPassword() {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [errMessage, setErrMessage] = useState(\"\");\n  const history = useHistory();\n\n  async function handleForgotPassword(res) {\n    const response = await fetch(\"/forgot-password/submit\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"email\": email\n      })\n    });\n    const r = await response.json();\n\n    if (response.status == 200) {\n      history.push(\"/email-sent\");\n    } else {\n      setError(true);\n      setErrMessage(r.message);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ForgotPassword\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Forgot Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          autoFocus: true,\n          type: \"text\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        block: true,\n        size: \"lg\",\n        type: \"submit\",\n        onClick: handleForgotPassword,\n        children: \"Send Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Overlay, {\n        show: error,\n        placement: \"right\",\n        children: ({\n          placement,\n          arrowProps,\n          show: _show,\n          popper,\n          ...props\n        }) => /*#__PURE__*/_jsxDEV(\"div\", { ...props,\n          style: {\n            backgroundColor: \"rgba(255, 100, 100, 0.85)\",\n            padding: \"2px 10px\",\n            color: \"white\",\n            borderRadius: 3,\n            ...props.style\n          },\n          children: errMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ForgotPassword, \"6Dv55xhS98WUStDMLOyjKr/mDV8=\", false, function () {\n  return [useHistory];\n});\n\n_c = ForgotPassword;\nexport default ForgotPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["C:/Users/danie/Desktop/COLLEGE STUFF/SOPH/fall/cs307/project/Corec-Tracker/corec-dashboard/src/ForgotPassword.js"],"names":["React","useState","BrowserRouter","Router","Switch","Route","Link","useHistory","Form","Button","Overlay","ForgotPassword","email","setEmail","error","setError","errMessage","setErrMessage","history","handleForgotPassword","res","response","fetch","method","headers","body","JSON","stringify","r","json","status","push","message","e","target","value","placement","arrowProps","show","_show","popper","props","backgroundColor","padding","color","borderRadius","style"],"mappings":"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","sourcesContent":["import { React, useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Overlay from \"react-overlays/esm/Overlay\";\r\n\r\nfunction ForgotPassword() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [errMessage, setErrMessage] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  async function handleForgotPassword(res) {\r\n    const response = await fetch(\"/forgot-password/submit\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        \"email\": email\r\n      })\r\n    });\r\n\r\n    const r = await response.json();\r\n    if (response.status == 200) {\r\n      history.push(\"/email-sent\");\r\n    } else {\r\n      setError(true);\r\n      setErrMessage(r.message);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"ForgotPassword\">\r\n      <h1>Forgot Password</h1>\r\n      <Form>\r\n        <Form.Group size=\"lg\" controlId=\"email\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"text\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Button block size=\"lg\" type=\"submit\" onClick={handleForgotPassword}>\r\n          Send Email\r\n        </Button>\r\n        <Overlay show={error} placement=\"right\">\r\n          {({ placement, arrowProps, show: _show, popper, ...props }) => (\r\n            <div\r\n              {...props}\r\n              style={{\r\n                backgroundColor: \"rgba(255, 100, 100, 0.85)\",\r\n                padding: \"2px 10px\",\r\n                color: \"white\",\r\n                borderRadius: 3,\r\n                ...props.style,\r\n              }}\r\n            >\r\n              {errMessage}\r\n            </div>\r\n          )}\r\n        </Overlay>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword;\r\n"]},"metadata":{},"sourceType":"module"}