{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\Desktop\\\\COLLEGE STUFF\\\\SOPH\\\\fall\\\\cs307\\\\project\\\\Corec-Tracker\\\\corec-dashboard\\\\src\\\\Signup.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, useHistory } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport PhoneInput from \"react-phone-number-input\";\nimport Overlay from \"react-overlays/esm/Overlay\";\nimport 'react-phone-number-input/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Signup({\n  setLogIn\n}) {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0 && name.length > 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  async function handleSignupSuccess(res) {\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        'email': email,\n        'password': password,\n        'phone': phone\n      })\n    };\n    const response = await fetch(\"/signup/submit\", requestOptions); //console.log(json);\n\n    if (response.status = 200) {\n      history.push(\"/account/verify\");\n    } else {} //setLogIn();\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Signup\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          autoFocus: true,\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"phone\",\n        children: /*#__PURE__*/_jsxDEV(PhoneInput, {\n          placeholder: \"Phone Number\",\n          value: phone,\n          onChange: setPhone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Overlay, {\n          show: !error,\n          placement: \"right\",\n          children: ({\n            placement,\n            arrowProps,\n            show: _show,\n            popper,\n            ...props\n          }) => /*#__PURE__*/_jsxDEV(\"div\", { ...props,\n            style: {\n              backgroundColor: \"rgba(255, 100, 100, 0.85)\",\n              padding: \"2px 10px\",\n              color: \"white\",\n              borderRadius: 3,\n              ...props.style\n            },\n            children: \"Could not verify account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        block: true,\n        size: \"lg\",\n        type: \"submit\",\n        onClick: handleSignupSuccess,\n        disabled: !validateForm(),\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Signup, \"1jdkQ5axShrdpGvqNKzc27tIKQs=\", false, function () {\n  return [useHistory];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["C:/Users/danie/Desktop/COLLEGE STUFF/SOPH/fall/cs307/project/Corec-Tracker/corec-dashboard/src/Signup.js"],"names":["React","useState","BrowserRouter","Router","Switch","Route","Link","useHistory","Form","Button","PhoneInput","Overlay","Signup","setLogIn","email","setEmail","name","setName","phone","setPhone","error","setError","password","setPassword","history","validateForm","length","handleSubmit","event","preventDefault","handleSignupSuccess","res","requestOptions","method","headers","body","JSON","stringify","response","fetch","status","push","e","target","value","placement","arrowProps","show","_show","popper","props","backgroundColor","padding","color","borderRadius","style"],"mappings":"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","sourcesContent":["import { React, useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport PhoneInput from \"react-phone-number-input\";\r\nimport Overlay from \"react-overlays/esm/Overlay\";\r\nimport 'react-phone-number-input/style.css';\r\n\r\nfunction Signup({ setLogIn }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  function validateForm() {\r\n    return email.length > 0 && password.length > 0 && name.length > 0;\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n  }\r\n\r\n  async function handleSignupSuccess(res) {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        'email': email,\r\n        'password': password,\r\n        'phone': phone\r\n      }),   \r\n    };\r\n    const response = await fetch(\"/signup/submit\", requestOptions);\r\n    //console.log(json);\r\n    if (response.status = 200) {\r\n      history.push(\"/account/verify\");\r\n    } else {\r\n\r\n    }\r\n    //setLogIn();\r\n  }\r\n\r\n  return (\r\n    <div className=\"Signup\">\r\n      <h1>Sign Up</h1>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group size=\"lg\" controlId=\"email\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group size=\"lg\" controlId=\"name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group size=\"lg\" controlId=\"phone\">\r\n          <PhoneInput\r\n            placeholder=\"Phone Number\"\r\n            value={phone}\r\n            onChange={setPhone}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group size=\"lg\" controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <Overlay show={!error} placement=\"right\">\r\n          {({ placement, arrowProps, show: _show, popper, ...props }) => (\r\n            <div\r\n              {...props}\r\n              style={{\r\n                backgroundColor: \"rgba(255, 100, 100, 0.85)\",\r\n                padding: \"2px 10px\",\r\n                color: \"white\",\r\n                borderRadius: 3,\r\n                ...props.style,\r\n              }}\r\n            >\r\n              Could not verify account\r\n            </div>\r\n          )}\r\n        </Overlay>\r\n        </Form.Group>        \r\n        <Button\r\n          block\r\n          size=\"lg\"\r\n          type=\"submit\"\r\n          onClick={handleSignupSuccess}\r\n          disabled={!validateForm()}\r\n        >\r\n          Sign Up\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}